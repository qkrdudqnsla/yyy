<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

<select id="getGrade" parameterType="String" resultType="String">
SELECT grade
FROM member
WHERE id = #{id}
</select>

<insert id="create" parameterType="MemberDTO">
INSERT INTO member(
id,passwd,mname,tel,email,zipcode,address1,address2,
job,mdate,fname,filesize
)
VALUES(
#{id},#{passwd},#{mname},#{tel},#{email},#{zipcode},#{address1},#{address2},
#{job},sysdate,#{fname},#{filesize}
)
</insert>

<update id="updatePasswd" parameterType="MemberDTO">
UPDATE member
SET passwd = #{passwd}
where id= #{id}
</update>

<update id="update" parameterType="MemberDTO">
UPDATE member
SET mname=#{mname},tel=#{tel},email=#{email},fname=#{fname},
filesize=#{filesize},zipcode=#{zipcode},
address1=#{address1},address2=#{address2},job=#{job}
WHERE id=#{id}
</update>

<update id="updateGrade_S" parameterType="String">
UPDATE member
SET grade = 'S'
where id=#{id}
</update>

<update id="updateGrade_V" parameterType="String">
UPDATE member
SET grade = 'V'
where id=#{id}
</update>

<select id="read" parameterType="String" resultType="MemberDTO">
SELECT id,passwd,mname,tel,email,zipcode,address1,address2,
job,mdate,fname,grade
FROM member
where id=#{id}
</select>

<delete id="delete" parameterType="String">
delete from member
where id=#{id}
</delete>

<select id="Fine_Id" parameterType="String" resultType="String">
select id from member
where email = #{email}
</select>

<select id="list" parameterType="map" resultType="MemberDTO">
SELECT id, mname, tel, email, zipcode, address1, 
address2, fname, r
	FROM(
	SELECT id, mname, tel, email, zipcode, address1,
	address2, fname, rownum r
		FROM(
		SELECT id, mname, tel, email, zipcode, address1,
		address2, fname
		FROM member
<where>
		<choose>
			<when test="col=='id'">
			id like '%'||#{word}||'%'
			</when>
			<when test="col=='mname'">
			mname like '%'||#{word}||'%'
			</when>
			<when test="col=='job'">
			job like '%'||#{word}||'%'
			</when>
		</choose>
</where>
ORDER BY mdate desc
	)
)
<![CDATA[
WHERE r>=#{sno} AND r<=#{eno}
]]>
</select>

<select id="loginCheck" parameterType="map" resultType="int">
SELECT count(id) as cnt
FROM member
WHERE id = #{id}
and passwd = #{passwd}
</select>

<select id="total" parameterType="map" resultType="int">
SELECT count(*) as cnt
FROM member
<where>
		<choose>
			<when test="col=='id'">
			id like '%'||#{word}||'%'
			</when>
			<when test="col=='mname'">
			mname like '%'||#{word}||'%'
			</when>
			<when test="col=='job'">
			job like '%'||#{word}||'%'
			</when>
		</choose>
</where>
</select>

<select id="duplicateId" parameterType="String" resultType="int">
SELECT COUNT(id) as cnt
FROM member
WHERE id=#{id}
</select>

<select id="duplicateEmail" parameterType="String" resultType="int">
SELECT COUNT(email) as cnt
FROM member
WHERE email=#{email}
</select>

<select id="getFname" parameterType="String" resultType="String">
SELECT fname
FROM member
WHERE id=#{id}
</select>

<select id="CheckPW" parameterType="map" resultType="int">
SELECT count(id) as cnt
FROM member
WHERE id = #{id}
and passwd = #{passwd}
</select>

</mapper>